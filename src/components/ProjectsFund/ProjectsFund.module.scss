@import '../../styles/index.scss';
.projects {
  :global {
    .container {
      @include adaptiveValue('padding-top', 56, 40, 0, 1200, 390);
      @include adaptiveValue('padding-bottom', 56, 40, 0, 1200, 390);
      @media (min-width: $mobile) {
        .swiper {
          margin-right: toRem(-22);
          margin-left: toRem(-22);

          padding-right: toRem(22);
          padding-left: toRem(22);
        }
      }
    }
  }
  .header {
    display: flex;
    align-items: center;
    justify-content: start;
    flex-direction: row-reverse;
    &:not(:last-child) {
      margin-bottom: toRem(32);
    }
    &__title {
      @media (min-width: $mobile) {
        flex: 0 1 66%;
      }
    }
    &__subtitle {
      @media (min-width: $mobile) {
        flex: 0 1 34%;
        font-weight: 600;
        line-height: 150%;
        position: relative;

        @include adaptiveValue('padding-left', 56, 39, 0, 1200, 390);
        @media (min-width: $mobile) {
          padding-right: toRem(20);
        }
        &::before {
          content: '';
          position: absolute;
          height: toRem(2);
          top: 50%;
          left: 0;
          background-color: var(--black);
          border-radius: toRem(8);
          @include adaptiveValue('width', 44, 24, 0, 1200, 390);
        }
      }
      @media (max-width: $mobile) {
        display: none;
      }
    }
  }
}

.project {
  display: flex;
  flex-direction: column-reverse;
  cursor: grab;
  .content {
    display: flex;
    flex-direction: column;
    align-items: start;
    justify-content: start;

    &__title {
      font-family: var(--font-nunito);
      font-size: toRem(22);
      font-weight: 600;
      line-height: 100%;
      &:not(:last-child) {
        margin-bottom: toRem(16);
      }
    }

    &__description {
      flex: 1 1 auto;
      font-size: toRem(14);
      line-height: 150%;

      overflow: hidden;
      text-overflow: ellipsis;
      max-width: 100%;
      display: -webkit-box;
      -webkit-line-clamp: 3;
      -webkit-box-orient: vertical;

      &:not(:last-child) {
        margin-bottom: toRem(24);
      }
    }

    &__btn {
      height: toRem(44);
      width: toRem(44);
      display: flex;
      justify-content: center;
      align-items: center;
      padding: toRem(6);
      border-radius: toRem(12);
      color: var(--total-white);
      background-color: var(--light-black);
      transition: background-color 0.2s linear;

      &:hover {
        background-color: var(--black);
        color: var(--total-white);
      }
      svg {
        height: toRem(32);
        width: toRem(32);
        fill: var(--bg);
      }
    }
  }
  .image {
    position: relative;
    overflow: hidden;
    padding-bottom: 67.708333%; /* 260/384 */
    border-radius: toRem(16);

    @media (min-width: $mobile) {
      margin-bottom: toRem(32);
    }
    @media (max-width: $mobile) {
      margin-bottom: toRem(50);
    }
    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      background-color: rgba(0, 0, 0, 0.15);
      z-index: 2;
    }
    img {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      object-fit: cover;
    }
  }
}

.arrows {
  position: absolute;
  display: inline-flex;
  align-items: center;
  justify-content: space-between;
  z-index: 1;
  
  @include adaptiveValue("left", 8, 24, 0, 1200, 768);
  @include adaptiveValue("right", 8, 24, 0, 1200, 768);
  @media (min-width: $mobile) {
    top: 25%;
  }
  @include adaptiveValue("top", 478, 174, 3, 767, 320);
  .arrow_prev,
  .arrow_next {
    z-index: 4;
    cursor: pointer;
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s;
    @include adaptiveValue('padding', 8, 11, 0, 1200, 768);
    background-color: var(--bg);
    box-shadow: 0px toRem(4) toRem(10) 0px rgba(14, 14, 14, 0.15);
    border-radius: toRem(8);
    @media (any-hover: hover) {
      &:hover {
        box-shadow: 0px toRem(4) toRem(10) 0px rgba(14, 14, 14, 0.3);
        background-color: var(--total-white);
        &.arrow_next {
          svg {
            transform: translate(toRem(4), 0px);
          }
        }
        &.arrow_prev {
          svg {
            transform: translate(toRem(-4), 0px);
          }
        }
      }
    }
    svg {
      transition: all 0.3s;
      fill: var(--black);
      @include adaptiveValue('height', 16, 22, 0, 1200, 768);
      @include adaptiveValue('width', 16, 22, 0, 1200, 768);
    }
    &:disabled {
      opacity: 0.6;
      pointer-events: none;
      cursor: not-allowed;
    }
  }
}
